name: Branches

# Run this workflow every time a new commit pushed to your repository
on: 
  push:
    branches-ignore:
      - main
jobs:
  show-key-values:
    name: show values of variables
    runs-on: ubuntu-latest

    steps:
      - name: run test command
        run: |
          echo github.event_name: ${{ github.event_name }}
          echo github.ref: ${{ github.ref }}
  
  call-format-and-lint:
    uses: bpafoshizle/actions/.github/workflows/lint.yml@main

  setup-environment-file:
    name: set up environment file
    runs-on: ubuntu-latest
    steps:
      - shell: bash
        run: |
          # Write the commands to set the environment variables to a string
          commands="# Set the environment variables
          export POLYGON_TOKEN=\"${{ secrets.POLYGON_TOKEN }}\"
          export TWITCH_BOT_USERNAME=\"${{ secrets.TWITCH_BOT_USERNAME }}\"
          export TWITCH_BOT_CLIENT_ID=\"${{ secrets.TWITCH_BOT_CLIENT_ID }}\"
          export TWITCH_BOT_CLIENT_SECRET=\"${{ secrets.TWITCH_BOT_CLIENT_SECRET }}\"
          export REDDIT_CLIENT_ID=\"${{ secrets.REDDIT_CLIENT_ID }}\"
          export REDDIT_CLIENT_SECRET=\"${{ secrets.REDDIT_CLIENT_SECRET }}\"
          export REDDIT_USERNAME=\"${{ secrets.REDDIT_USERNAME }}\"
          export REDDIT_PASSWORD=\"${{ secrets.REDDIT_PASSWORD }}\"
          export GFYCAT_CLIENT_ID=\"${{ secrets.GFYCAT_CLIENT_ID }}\"
          export GFYCAT_CLIENT_SECRET=\"${{ secrets.GFYCAT_CLIENT_SECRET }}\"
          export DSCRD_CHNL_GENERAL=\"${{ secrets.DSCRD_CHNL_GENERAL }}\"
          "
          # Write the commands to a file
          echo "$commands" > env.txt
      - name: Upload env.txt as an artifact
        uses: actions/upload-artifact@v3
        with:
          name: environment
          path: env.txt
  
  check-env-file:
    name: check environment file
    runs-on: ubuntu-latest
    needs: setup-environment-file
    steps:
      - name: Download env.txt as an artifact
        uses: actions/download-artifact@v3
        with:
          name: environment
          path: env.txt
      - shell: bash
        run: |
          # Read the commands from the file
          source env.txt
          # Print the environment variables
          echo $DSCRD_CHNL_GENERAL
  
  test-python:
    # Ensure test job passes before pushing image.
    needs: call-format-and-lint
    # Name the Job
    name: Test python
    # Set the type of machine to run on
    runs-on: ubuntu-latest

    steps:
      - name: checkout code
        uses: actions/checkout@v2

      - name: install test dependencies
        run: |
          pip install -r requirements.txt

      - name: run tests
        run: |
          python -m unittest discover -v -s src
        env:
          POLYGON_TOKEN: ${{ secrets.POLYGON_TOKEN }}
          TWITCH_BOT_USERNAME: ${{ secrets.TWITCH_BOT_USERNAME }}
          TWITCH_BOT_CLIENT_ID: ${{ secrets.TWITCH_BOT_CLIENT_ID }}
          TWITCH_BOT_CLIENT_SECRET: ${{ secrets.TWITCH_BOT_CLIENT_SECRET }}
          REDDIT_CLIENT_ID: ${{ secrets.REDDIT_CLIENT_ID }}
          REDDIT_CLIENT_SECRET: ${{ secrets.REDDIT_CLIENT_SECRET }}
          REDDIT_USERNAME: ${{ secrets.REDDIT_USERNAME }}
          REDDIT_PASSWORD: ${{ secrets.REDDIT_PASSWORD }}
          GFYCAT_CLIENT_ID: ${{ secrets.GFYCAT_CLIENT_ID }}
          GFYCAT_CLIENT_SECRET: ${{ secrets.GFYCAT_CLIENT_SECRET }}
          DSCRD_CHNL_GENERAL: ${{ secrets.DSCRD_CHNL_GENERAL }}
